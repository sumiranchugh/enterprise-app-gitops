kind: Pod
apiVersion: v1
metadata:
  annotations:
    openshift.io/scc: pipelines-scc
    pipeline.tekton.dev/release: 9419cdf
    tekton.dev/tags: git
    pipeline.openshift.io/started-by: opentlc-mgr
    tekton.dev/categories: Git
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"tekton.dev/v1beta1","kind":"ClusterTask","metadata":{"annotations":{"tekton.dev/categories":"Git","tekton.dev/displayName":"git
      clone","tekton.dev/pipelines.minVersion":"0.21.0","tekton.dev/platforms":"linux/amd64,linux/s390x,linux/ppc64le,linux/arm64","tekton.dev/tags":"git"},"labels":{"app.kubernetes.io/version":"0.4","operator.tekton.dev/provider-type":"redhat"},"name":"git-clone","namespace":"openshift-pipelines","ownerReferences":[{"apiVersion":"operator.tekton.dev/v1alpha1","blockOwnerDeletion":true,"controller":true,"kind":"TektonInstallerSet","name":"addon-clustertasks-ghnrw","uid":"ee20e344-9241-4b43-9b97-6a6589069bf1"}]},"spec":{"description":"These
      Tasks are Git tasks to work with repositories used by other tasks in your
      Pipeline.\nThe git-clone Task will clone a repo from the provided url into
      the output Workspace. By default the repo will be cloned into the root of
      your Workspace. You can clone into a subdirectory by setting this Task's
      subdirectory param. This Task also supports sparse checkouts. To perform a
      sparse checkout, pass a list of comma separated directory patterns to this
      Task's sparseCheckoutDirectories
      param.","params":[{"description":"Repository URL to clone
      from.","name":"url","type":"string"},{"default":"","description":"Revision
      to checkout. (branch, tag, sha, ref,
      etc...)","name":"revision","type":"string"},{"default":"","description":"Refspec
      to fetch before checking out
      revision.","name":"refspec"},{"default":"true","description":"Initialize
      and fetch git
      submodules.","name":"submodules","type":"string"},{"default":"1","description":"Perform
      a shallow clone, fetching only the most recent N
      commits.","name":"depth","type":"string"},{"default":"true","description":"Set
      the `http.sslVerify` global git config. Setting this to `false` is not
      advised unless you are sure that you trust your git
      remote.","name":"sslVerify","type":"string"},{"default":"","description":"Subdirectory
      inside the `output` Workspace to clone the repo
      into.","name":"subdirectory","type":"string"},{"default":"","description":"Define
      the directory patterns to match or exclude when performing a sparse
      checkout.","name":"sparseCheckoutDirectories","type":"string"},{"default":"true","description":"Clean
      out the contents of the destination directory if it already exists before
      cloning.","name":"deleteExisting","type":"string"},{"default":"","description":"HTTP
      proxy server for non-SSL
      requests.","name":"httpProxy","type":"string"},{"default":"","description":"HTTPS
      proxy server for SSL
      requests.","name":"httpsProxy","type":"string"},{"default":"","description":"Opt
      out of proxying HTTP/HTTPS
      requests.","name":"noProxy","type":"string"},{"default":"true","description":"Log
      the commands that are executed during `git-clone`'s
      operation.","name":"verbose","type":"string"},{"default":"registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:158b0fda662e5bc05e2ff46f6864a8620bbb45e1a2388a456de43aad6e72d8f7","description":"The
      image providing the git-init binary that this Task
      runs.","name":"gitInitImage","type":"string"},{"default":"/tekton/home","description":"Absolute
      path to the user's home directory. Set this explicitly if you are running
      the image as a non-root user or have overridden\nthe gitInitImage param
      with an image containing custom user
      configuration.\n","name":"userHome","type":"string"}],"results":[{"description":"The
      precise commit SHA that was fetched by this
      Task.","name":"commit"},{"description":"The precise URL that was fetched
      by this
      Task.","name":"url"}],"steps":[{"env":[{"name":"HOME","value":"$(params.userHome)"},{"name":"PARAM_URL","value":"$(params.url)"},{"name":"PARAM_REVISION","value":"$(params.revision)"},{"name":"PARAM_REFSPEC","value":"$(params.refspec)"},{"name":"PARAM_SUBMODULES","value":"$(params.submodules)"},{"name":"PARAM_DEPTH","value":"$(params.depth)"},{"name":"PARAM_SSL_VERIFY","value":"$(params.sslVerify)"},{"name":"PARAM_SUBDIRECTORY","value":"$(params.subdirectory)"},{"name":"PARAM_DELETE_EXISTING","value":"$(params.deleteExisting)"},{"name":"PARAM_HTTP_PROXY","value":"$(params.httpProxy)"},{"name":"PARAM_HTTPS_PROXY","value":"$(params.httpsProxy)"},{"name":"PARAM_NO_PROXY","value":"$(params.noProxy)"},{"name":"PARAM_VERBOSE","value":"$(params.verbose)"},{"name":"PARAM_SPARSE_CHECKOUT_DIRECTORIES","value":"$(params.sparseCheckoutDirectories)"},{"name":"PARAM_USER_HOME","value":"$(params.userHome)"},{"name":"WORKSPACE_OUTPUT_PATH","value":"$(workspaces.output.path)"},{"name":"WORKSPACE_SSH_DIRECTORY_BOUND","value":"$(workspaces.ssh-directory.bound)"},{"name":"WORKSPACE_SSH_DIRECTORY_PATH","value":"$(workspaces.ssh-directory.path)"},{"name":"WORKSPACE_BASIC_AUTH_DIRECTORY_BOUND","value":"$(workspaces.basic-auth.bound)"},{"name":"WORKSPACE_BASIC_AUTH_DIRECTORY_PATH","value":"$(workspaces.basic-auth.path)"}],"image":"$(params.gitInitImage)","name":"clone","script":"#!/usr/bin/env
      sh\nset -eu\n\nif [ \"${PARAM_VERBOSE}\" = \"true\" ] ; then\n  set
      -x\nfi\n\nif [ \"${WORKSPACE_BASIC_AUTH_DIRECTORY_BOUND}\" = \"true\" ] ;
      then\n  cp \"${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.git-credentials\"
      \"${PARAM_USER_HOME}/.git-credentials\"\n  cp
      \"${WORKSPACE_BASIC_AUTH_DIRECTORY_PATH}/.gitconfig\"
      \"${PARAM_USER_HOME}/.gitconfig\"\n  chmod 400
      \"${PARAM_USER_HOME}/.git-credentials\"\n  chmod 400
      \"${PARAM_USER_HOME}/.gitconfig\"\nfi\n\nif [
      \"${WORKSPACE_SSH_DIRECTORY_BOUND}\" = \"true\" ] ; then\n  cp -R
      \"${WORKSPACE_SSH_DIRECTORY_PATH}\" \"${PARAM_USER_HOME}\"/.ssh\n  chmod
      700 \"${PARAM_USER_HOME}\"/.ssh\n  chmod -R 400
      \"${PARAM_USER_HOME}\"/.ssh/*\nfi\n\nCHECKOUT_DIR=\"${WORKSPACE_OUTPUT_PATH}/${PARAM_SUBDIRECTORY}\"\n\ncleandir()
      {\n  # Delete any existing contents of the repo directory if it exists.\n 
      #\n  # We don't just \"rm -rf ${CHECKOUT_DIR}\" because ${CHECKOUT_DIR}
      might be \"/\"\n  # or the root of a mounted volume.\n  if [ -d
      \"${CHECKOUT_DIR}\" ] ; then\n    # Delete non-hidden files and
      directories\n    rm -rf \"${CHECKOUT_DIR:?}\"/*\n    # Delete files and
      directories starting with . but excluding ..\n    rm -rf
      \"${CHECKOUT_DIR}\"/.[!.]*\n    # Delete files and directories starting
      with .. plus any other character\n    rm -rf \"${CHECKOUT_DIR}\"/..?*\n 
      fi\n}\n\nif [ \"${PARAM_DELETE_EXISTING}\" = \"true\" ] ; then\n 
      cleandir\nfi\n\ntest -z \"${PARAM_HTTP_PROXY}\" || export
      HTTP_PROXY=\"${PARAM_HTTP_PROXY}\"\ntest -z \"${PARAM_HTTPS_PROXY}\" ||
      export HTTPS_PROXY=\"${PARAM_HTTPS_PROXY}\"\ntest -z \"${PARAM_NO_PROXY}\"
      || export NO_PROXY=\"${PARAM_NO_PROXY}\"\n\n/ko-app/git-init \\\n 
      -url=\"${PARAM_URL}\" \\\n  -revision=\"${PARAM_REVISION}\" \\\n 
      -refspec=\"${PARAM_REFSPEC}\" \\\n  -path=\"${CHECKOUT_DIR}\" \\\n 
      -sslVerify=\"${PARAM_SSL_VERIFY}\" \\\n 
      -submodules=\"${PARAM_SUBMODULES}\" \\\n  -depth=\"${PARAM_DEPTH}\" \\\n 
      -sparseCheckoutDirectories=\"${PARAM_SPARSE_CHECKOUT_DIRECTORIES}\"\ncd
      \"${CHECKOUT_DIR}\"\nRESULT_SHA=\"$(git rev-parse
      HEAD)\"\nEXIT_CODE=\"$?\"\nif [ \"${EXIT_CODE}\" != 0 ] ; then\n  exit
      \"${EXIT_CODE}\"\nfi\nprintf \"%s\" \"${RESULT_SHA}\" \u003e
      \"$(results.commit.path)\"\nprintf \"%s\" \"${PARAM_URL}\" \u003e
      \"$(results.url.path)\"\n"}],"workspaces":[{"description":"The git repo
      will be cloned onto the volume backing this
      Workspace.","name":"output"},{"description":"A .ssh directory with private
      key, known_hosts, config, etc. Copied to\nthe user's home before git
      commands are executed. Used to authenticate\nwith the git remote when
      performing the clone. Binding a Secret to this\nWorkspace is strongly
      recommended over other volume
      types.\n","name":"ssh-directory","optional":true},{"description":"A
      Workspace containing a .gitconfig and .git-credentials file. These\nwill
      be copied to the user's home before any git commands are run. Any\nother
      files in this Workspace are ignored. It is strongly recommended\nto use
      ssh-directory over basic-auth whenever possible and to bind a\nSecret to
      this Workspace over other volume
      types.\n","name":"basic-auth","optional":true}]}}
    tekton.dev/platforms: 'linux/amd64,linux/s390x,linux/ppc64le,linux/arm64'
    tekton.dev/pipelines.minVersion: 0.21.0
    tekton.dev/displayName: git clone
  deletionTimestamp: '2024-02-14T20:19:33Z'
  resourceVersion: '1429083'
  name: enterprise-app-pipeline-dx06x5-fetch-repository-j9f49-pod-tkvqk
  uid: 62269a4e-03c4-4d1b-a236-8d1936ec8514
  deletionGracePeriodSeconds: 30
  creationTimestamp: '2024-02-14T20:18:59Z'
  managedFields:
    - manager: kubelet
      operation: Update
      apiVersion: v1
      time: '2024-02-14T20:18:59Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:conditions':
            'k:{"type":"ContainersReady"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Initialized"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Ready"}':
              .: {}
              'f:lastProbeTime': {}
              'f:lastTransitionTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:containerStatuses': {}
          'f:hostIP': {}
          'f:initContainerStatuses': {}
          'f:startTime': {}
      subresource: status
    - manager: openshift-pipelines-controller
      operation: Update
      apiVersion: v1
      time: '2024-02-14T20:18:59Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
            'f:tekton.dev/platforms': {}
            .: {}
            'f:pipeline.tekton.dev/release': {}
            'f:tekton.dev/displayName': {}
            'f:tekton.dev/tags': {}
            'f:tekton.dev/categories': {}
            'f:tekton.dev/pipelines.minVersion': {}
            'f:pipeline.openshift.io/started-by': {}
          'f:labels':
            'f:tekton.dev/pipelineTask': {}
            'f:tekton.dev/clusterTask': {}
            'f:app.kubernetes.io/managed-by': {}
            'f:tekton.dev/taskRun': {}
            'f:tekton.dev/memberOf': {}
            .: {}
            'f:tekton.dev/pipelineRun': {}
            'f:app.kubernetes.io/version': {}
            'f:app.kubernetes.io/instance': {}
            'f:operator.tekton.dev/provider-type': {}
            'f:tekton.dev/pipeline': {}
          'f:ownerReferences':
            .: {}
            'k:{"uid":"bbcdcb91-2263-44cf-89f3-e33dd05024ad"}': {}
        'f:spec':
          'f:volumes':
            'k:{"name":"tekton-creds-init-home-0"}':
              .: {}
              'f:emptyDir':
                .: {}
                'f:medium': {}
              'f:name': {}
            'k:{"name":"tekton-internal-secret-volume-pipeline-dockercfg-rkmfm-s74l4"}':
              .: {}
              'f:name': {}
              'f:secret':
                .: {}
                'f:defaultMode': {}
                'f:secretName': {}
            'k:{"name":"tekton-internal-workspace"}':
              .: {}
              'f:emptyDir': {}
              'f:name': {}
            'k:{"name":"tekton-internal-results"}':
              .: {}
              'f:emptyDir': {}
              'f:name': {}
            'k:{"name":"tekton-internal-secret-volume-image-registry-secret-6dgc5"}':
              .: {}
              'f:name': {}
              'f:secret':
                .: {}
                'f:defaultMode': {}
                'f:secretName': {}
            .: {}
            'k:{"name":"ws-7lq87"}':
              .: {}
              'f:name': {}
              'f:persistentVolumeClaim':
                .: {}
                'f:claimName': {}
            'k:{"name":"tekton-internal-tools"}':
              .: {}
              'f:emptyDir': {}
              'f:name': {}
            'k:{"name":"tekton-internal-steps"}':
              .: {}
              'f:emptyDir': {}
              'f:name': {}
            'k:{"name":"tekton-internal-scripts"}':
              .: {}
              'f:emptyDir': {}
              'f:name': {}
            'k:{"name":"tekton-internal-downward"}':
              .: {}
              'f:downwardAPI':
                .: {}
                'f:defaultMode': {}
                'f:items': {}
              'f:name': {}
            'k:{"name":"tekton-internal-home"}':
              .: {}
              'f:emptyDir': {}
              'f:name': {}
          'f:containers':
            'k:{"name":"step-clone"}':
              'f:image': {}
              'f:volumeMounts':
                'k:{"mountPath":"/tekton/downward"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/workspace"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/workspace/output"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/tekton/home"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/tekton/results"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/tekton/creds-secrets/image-registry-secret"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/tekton/tools"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                .: {}
                'k:{"mountPath":"/tekton/creds"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/tekton/steps"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/tekton/scripts"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                  'f:readOnly': {}
                'k:{"mountPath":"/tekton/creds-secrets/pipeline-dockercfg-rkmfm"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
              'f:terminationMessagePolicy': {}
              .: {}
              'f:resources': {}
              'f:args': {}
              'f:command': {}
              'f:env':
                'k:{"name":"PARAM_SSL_VERIFY"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"PARAM_VERBOSE"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"PARAM_DEPTH"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"PARAM_SUBDIRECTORY"}':
                  .: {}
                  'f:name': {}
                'k:{"name":"HOME"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"WORKSPACE_BASIC_AUTH_DIRECTORY_PATH"}':
                  .: {}
                  'f:name': {}
                'k:{"name":"PARAM_NO_PROXY"}':
                  .: {}
                  'f:name': {}
                'k:{"name":"WORKSPACE_OUTPUT_PATH"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"PARAM_HTTP_PROXY"}':
                  .: {}
                  'f:name': {}
                .: {}
                'k:{"name":"PARAM_REFSPEC"}':
                  .: {}
                  'f:name': {}
                'k:{"name":"PARAM_URL"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"PARAM_REVISION"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"PARAM_SPARSE_CHECKOUT_DIRECTORIES"}':
                  .: {}
                  'f:name': {}
                'k:{"name":"PARAM_USER_HOME"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"WORKSPACE_BASIC_AUTH_DIRECTORY_BOUND"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"PARAM_HTTPS_PROXY"}':
                  .: {}
                  'f:name': {}
                'k:{"name":"WORKSPACE_SSH_DIRECTORY_PATH"}':
                  .: {}
                  'f:name': {}
                'k:{"name":"PARAM_SUBMODULES"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"WORKSPACE_SSH_DIRECTORY_BOUND"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
                'k:{"name":"PARAM_DELETE_EXISTING"}':
                  .: {}
                  'f:name': {}
                  'f:value': {}
              'f:terminationMessagePath': {}
              'f:imagePullPolicy': {}
              'f:name': {}
          'f:dnsPolicy': {}
          'f:serviceAccount': {}
          'f:restartPolicy': {}
          'f:activeDeadlineSeconds': {}
          'f:schedulerName': {}
          'f:terminationGracePeriodSeconds': {}
          'f:initContainers':
            .: {}
            'k:{"name":"place-scripts"}':
              'f:image': {}
              'f:volumeMounts':
                .: {}
                'k:{"mountPath":"/tekton/scripts"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
                'k:{"mountPath":"/tekton/tools"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
              'f:terminationMessagePolicy': {}
              .: {}
              'f:resources': {}
              'f:args': {}
              'f:command': {}
              'f:terminationMessagePath': {}
              'f:imagePullPolicy': {}
              'f:name': {}
            'k:{"name":"place-tools"}':
              'f:image': {}
              'f:volumeMounts':
                .: {}
                'k:{"mountPath":"/tekton/tools"}':
                  .: {}
                  'f:mountPath': {}
                  'f:name': {}
              'f:terminationMessagePolicy': {}
              .: {}
              'f:workingDir': {}
              'f:resources': {}
              'f:command': {}
              'f:terminationMessagePath': {}
              'f:imagePullPolicy': {}
              'f:name': {}
          'f:serviceAccountName': {}
          'f:enableServiceLinks': {}
          'f:securityContext': {}
  namespace: enterprise-app-dev
  ownerReferences:
    - apiVersion: tekton.dev/v1beta1
      kind: TaskRun
      name: enterprise-app-pipeline-dx06x5-fetch-repository-j9f49
      uid: bbcdcb91-2263-44cf-89f3-e33dd05024ad
      controller: true
      blockOwnerDeletion: true
  labels:
    tekton.dev/memberOf: tasks
    app.kubernetes.io/instance: enterprise-app-pipeline
    app.kubernetes.io/version: '0.4'
    tekton.dev/clusterTask: git-clone
    tekton.dev/pipeline: enterprise-app-pipeline
    operator.tekton.dev/provider-type: redhat
    app.kubernetes.io/managed-by: tekton-pipelines
    tekton.dev/pipelineTask: fetch-repository
    tekton.dev/taskRun: enterprise-app-pipeline-dx06x5-fetch-repository-j9f49
    tekton.dev/pipelineRun: enterprise-app-pipeline-dx06x5
spec:
  restartPolicy: Never
  activeDeadlineSeconds: 5400
  initContainers:
    - resources: {}
      terminationMessagePath: /dev/termination-log
      name: place-tools
      command:
        - /ko-app/entrypoint
        - cp
        - /ko-app/entrypoint
        - /tekton/tools/entrypoint
      securityContext:
        capabilities:
          drop:
            - MKNOD
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: tekton-internal-tools
          mountPath: /tekton/tools
        - name: kube-api-access-525l9
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePolicy: File
      image: >-
        registry.redhat.io/openshift-pipelines/pipelines-entrypoint-rhel8@sha256:1f38b7296065233d17f7529f29b948183ddca4ccf640bd5d60be3aa3a6bd9366
      workingDir: /
    - resources: {}
      terminationMessagePath: /dev/termination-log
      name: place-scripts
      command:
        - sh
      securityContext:
        capabilities:
          drop:
            - MKNOD
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: tekton-internal-scripts
          mountPath: /tekton/scripts
        - name: tekton-internal-tools
          mountPath: /tekton/tools
        - name: kube-api-access-525l9
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePolicy: File
      image: >-
        registry.access.redhat.com/ubi8/ubi-minimal@sha256:54ef2173bba7384dc7609e8affbae1c36f8a3ec137cacc0866116d65dd4b9afe
      args:
        - '-c'
        - >
          scriptfile="/tekton/scripts/script-0-k2fbg"

          touch ${scriptfile} && chmod +x ${scriptfile}

          cat > ${scriptfile} << '_EOF_'

          IyEvdXNyL2Jpbi9lbnYgc2gKc2V0IC1ldQoKaWYgWyAiJHtQQVJBTV9WRVJCT1NFfSIgPSAidHJ1ZSIgXSA7IHRoZW4KICBzZXQgLXgKZmkKCmlmIFsgIiR7V09SS1NQQUNFX0JBU0lDX0FVVEhfRElSRUNUT1JZX0JPVU5EfSIgPSAidHJ1ZSIgXSA7IHRoZW4KICBjcCAiJHtXT1JLU1BBQ0VfQkFTSUNfQVVUSF9ESVJFQ1RPUllfUEFUSH0vLmdpdC1jcmVkZW50aWFscyIgIiR7UEFSQU1fVVNFUl9IT01FfS8uZ2l0LWNyZWRlbnRpYWxzIgogIGNwICIke1dPUktTUEFDRV9CQVNJQ19BVVRIX0RJUkVDVE9SWV9QQVRIfS8uZ2l0Y29uZmlnIiAiJHtQQVJBTV9VU0VSX0hPTUV9Ly5naXRjb25maWciCiAgY2htb2QgNDAwICIke1BBUkFNX1VTRVJfSE9NRX0vLmdpdC1jcmVkZW50aWFscyIKICBjaG1vZCA0MDAgIiR7UEFSQU1fVVNFUl9IT01FfS8uZ2l0Y29uZmlnIgpmaQoKaWYgWyAiJHtXT1JLU1BBQ0VfU1NIX0RJUkVDVE9SWV9CT1VORH0iID0gInRydWUiIF0gOyB0aGVuCiAgY3AgLVIgIiR7V09SS1NQQUNFX1NTSF9ESVJFQ1RPUllfUEFUSH0iICIke1BBUkFNX1VTRVJfSE9NRX0iLy5zc2gKICBjaG1vZCA3MDAgIiR7UEFSQU1fVVNFUl9IT01FfSIvLnNzaAogIGNobW9kIC1SIDQwMCAiJHtQQVJBTV9VU0VSX0hPTUV9Ii8uc3NoLyoKZmkKCkNIRUNLT1VUX0RJUj0iJHtXT1JLU1BBQ0VfT1VUUFVUX1BBVEh9LyR7UEFSQU1fU1VCRElSRUNUT1JZfSIKCmNsZWFuZGlyKCkgewogICMgRGVsZXRlIGFueSBleGlzdGluZyBjb250ZW50cyBvZiB0aGUgcmVwbyBkaXJlY3RvcnkgaWYgaXQgZXhpc3RzLgogICMKICAjIFdlIGRvbid0IGp1c3QgInJtIC1yZiAke0NIRUNLT1VUX0RJUn0iIGJlY2F1c2UgJHtDSEVDS09VVF9ESVJ9IG1pZ2h0IGJlICIvIgogICMgb3IgdGhlIHJvb3Qgb2YgYSBtb3VudGVkIHZvbHVtZS4KICBpZiBbIC1kICIke0NIRUNLT1VUX0RJUn0iIF0gOyB0aGVuCiAgICAjIERlbGV0ZSBub24taGlkZGVuIGZpbGVzIGFuZCBkaXJlY3RvcmllcwogICAgcm0gLXJmICIke0NIRUNLT1VUX0RJUjo/fSIvKgogICAgIyBEZWxldGUgZmlsZXMgYW5kIGRpcmVjdG9yaWVzIHN0YXJ0aW5nIHdpdGggLiBidXQgZXhjbHVkaW5nIC4uCiAgICBybSAtcmYgIiR7Q0hFQ0tPVVRfRElSfSIvLlshLl0qCiAgICAjIERlbGV0ZSBmaWxlcyBhbmQgZGlyZWN0b3JpZXMgc3RhcnRpbmcgd2l0aCAuLiBwbHVzIGFueSBvdGhlciBjaGFyYWN0ZXIKICAgIHJtIC1yZiAiJHtDSEVDS09VVF9ESVJ9Ii8uLj8qCiAgZmkKfQoKaWYgWyAiJHtQQVJBTV9ERUxFVEVfRVhJU1RJTkd9IiA9ICJ0cnVlIiBdIDsgdGhlbgogIGNsZWFuZGlyCmZpCgp0ZXN0IC16ICIke1BBUkFNX0hUVFBfUFJPWFl9IiB8fCBleHBvcnQgSFRUUF9QUk9YWT0iJHtQQVJBTV9IVFRQX1BST1hZfSIKdGVzdCAteiAiJHtQQVJBTV9IVFRQU19QUk9YWX0iIHx8IGV4cG9ydCBIVFRQU19QUk9YWT0iJHtQQVJBTV9IVFRQU19QUk9YWX0iCnRlc3QgLXogIiR7UEFSQU1fTk9fUFJPWFl9IiB8fCBleHBvcnQgTk9fUFJPWFk9IiR7UEFSQU1fTk9fUFJPWFl9IgoKL2tvLWFwcC9naXQtaW5pdCBcCiAgLXVybD0iJHtQQVJBTV9VUkx9IiBcCiAgLXJldmlzaW9uPSIke1BBUkFNX1JFVklTSU9OfSIgXAogIC1yZWZzcGVjPSIke1BBUkFNX1JFRlNQRUN9IiBcCiAgLXBhdGg9IiR7Q0hFQ0tPVVRfRElSfSIgXAogIC1zc2xWZXJpZnk9IiR7UEFSQU1fU1NMX1ZFUklGWX0iIFwKICAtc3VibW9kdWxlcz0iJHtQQVJBTV9TVUJNT0RVTEVTfSIgXAogIC1kZXB0aD0iJHtQQVJBTV9ERVBUSH0iIFwKICAtc3BhcnNlQ2hlY2tvdXREaXJlY3Rvcmllcz0iJHtQQVJBTV9TUEFSU0VfQ0hFQ0tPVVRfRElSRUNUT1JJRVN9IgpjZCAiJHtDSEVDS09VVF9ESVJ9IgpSRVNVTFRfU0hBPSIkKGdpdCByZXYtcGFyc2UgSEVBRCkiCkVYSVRfQ09ERT0iJD8iCmlmIFsgIiR7RVhJVF9DT0RFfSIgIT0gMCBdIDsgdGhlbgogIGV4aXQgIiR7RVhJVF9DT0RFfSIKZmkKcHJpbnRmICIlcyIgIiR7UkVTVUxUX1NIQX0iID4gIi90ZWt0b24vcmVzdWx0cy9jb21taXQiCnByaW50ZiAiJXMiICIke1BBUkFNX1VSTH0iID4gIi90ZWt0b24vcmVzdWx0cy91cmwiCg==

          _EOF_

          /tekton/tools/entrypoint decode-script "${scriptfile}"
  serviceAccountName: pipeline
  imagePullSecrets:
    - name: image-registry-secret
    - name: pipeline-dockercfg-rkmfm
  priority: 0
  schedulerName: default-scheduler
  enableServiceLinks: true
  terminationGracePeriodSeconds: 30
  preemptionPolicy: PreemptLowerPriority
  nodeName: ip-10-0-243-151.ap-southeast-1.compute.internal
  securityContext:
    seLinuxOptions:
      level: 's0:c28,c12'
    fsGroup: 1000780000
  containers:
    - resources: {}
      terminationMessagePath: /tekton/termination
      name: step-clone
      command:
        - /tekton/tools/entrypoint
      env:
        - name: HOME
          value: /tekton/home
        - name: PARAM_URL
          value: 'https://github.com/sumiranchugh/enterprise-app.git'
        - name: PARAM_REVISION
          value: main
        - name: PARAM_REFSPEC
        - name: PARAM_SUBMODULES
          value: 'true'
        - name: PARAM_DEPTH
          value: '1'
        - name: PARAM_SSL_VERIFY
          value: 'true'
        - name: PARAM_SUBDIRECTORY
        - name: PARAM_DELETE_EXISTING
          value: 'false'
        - name: PARAM_HTTP_PROXY
        - name: PARAM_HTTPS_PROXY
        - name: PARAM_NO_PROXY
        - name: PARAM_VERBOSE
          value: 'true'
        - name: PARAM_SPARSE_CHECKOUT_DIRECTORIES
        - name: PARAM_USER_HOME
          value: /tekton/home
        - name: WORKSPACE_OUTPUT_PATH
          value: /workspace/output
        - name: WORKSPACE_SSH_DIRECTORY_BOUND
          value: 'false'
        - name: WORKSPACE_SSH_DIRECTORY_PATH
        - name: WORKSPACE_BASIC_AUTH_DIRECTORY_BOUND
          value: 'false'
        - name: WORKSPACE_BASIC_AUTH_DIRECTORY_PATH
        - name: SSL_CERT_DIR
          value: >-
            /tekton-custom-certs:/etc/ssl/certs:/etc/pki/tls/certs:/system/etc/security/cacerts
      securityContext:
        capabilities:
          drop:
            - MKNOD
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: ws-7lq87
          mountPath: /workspace/output
        - name: tekton-internal-scripts
          readOnly: true
          mountPath: /tekton/scripts
        - name: tekton-internal-tools
          mountPath: /tekton/tools
        - name: tekton-internal-downward
          mountPath: /tekton/downward
        - name: tekton-creds-init-home-0
          mountPath: /tekton/creds
        - name: tekton-internal-workspace
          mountPath: /workspace
        - name: tekton-internal-home
          mountPath: /tekton/home
        - name: tekton-internal-results
          mountPath: /tekton/results
        - name: tekton-internal-steps
          mountPath: /tekton/steps
        - name: tekton-internal-secret-volume-image-registry-secret-6dgc5
          mountPath: /tekton/creds-secrets/image-registry-secret
        - name: tekton-internal-secret-volume-pipeline-dockercfg-rkmfm-s74l4
          mountPath: /tekton/creds-secrets/pipeline-dockercfg-rkmfm
        - name: kube-api-access-525l9
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        - name: config-trusted-cabundle-volume
          readOnly: true
          mountPath: /tekton-custom-certs/ca-bundle.crt
          subPath: ca-bundle.crt
        - name: config-service-cabundle-volume
          readOnly: true
          mountPath: /tekton-custom-certs/service-ca.crt
          subPath: service-ca.crt
      terminationMessagePolicy: File
      image: >-
        registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:158b0fda662e5bc05e2ff46f6864a8620bbb45e1a2388a456de43aad6e72d8f7
      args:
        - '-wait_file'
        - /tekton/downward/ready
        - '-wait_file_content'
        - '-post_file'
        - /tekton/tools/0
        - '-termination_path'
        - /tekton/termination
        - '-step_metadata_dir'
        - /tekton/steps/step-clone
        - '-step_metadata_dir_link'
        - /tekton/steps/0
        - '-docker-config=image-registry-secret'
        - '-docker-cfg=pipeline-dockercfg-rkmfm'
        - '-results'
        - 'commit,url'
        - '-entrypoint'
        - /tekton/scripts/script-0-k2fbg
        - '--'
  serviceAccount: pipeline
  volumes:
    - name: tekton-internal-workspace
      emptyDir: {}
    - name: tekton-internal-home
      emptyDir: {}
    - name: tekton-internal-results
      emptyDir: {}
    - name: tekton-internal-steps
      emptyDir: {}
    - name: tekton-internal-secret-volume-image-registry-secret-6dgc5
      secret:
        secretName: image-registry-secret
        defaultMode: 420
    - name: tekton-internal-secret-volume-pipeline-dockercfg-rkmfm-s74l4
      secret:
        secretName: pipeline-dockercfg-rkmfm
        defaultMode: 420
    - name: tekton-internal-scripts
      emptyDir: {}
    - name: tekton-internal-tools
      emptyDir: {}
    - name: tekton-internal-downward
      downwardAPI:
        items:
          - path: ready
            fieldRef:
              apiVersion: v1
              fieldPath: 'metadata.annotations[''tekton.dev/ready'']'
        defaultMode: 420
    - name: tekton-creds-init-home-0
      emptyDir:
        medium: Memory
    - name: ws-7lq87
      persistentVolumeClaim:
        claimName: workspace
    - name: kube-api-access-525l9
      projected:
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
                - key: ca.crt
                  path: ca.crt
          - downwardAPI:
              items:
                - path: namespace
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
          - configMap:
              name: openshift-service-ca.crt
              items:
                - key: service-ca.crt
                  path: service-ca.crt
        defaultMode: 420
    - name: config-trusted-cabundle-volume
      configMap:
        name: config-trusted-cabundle
        items:
          - key: ca-bundle.crt
            path: ca-bundle.crt
        defaultMode: 420
    - name: config-service-cabundle-volume
      configMap:
        name: config-service-cabundle
        items:
          - key: service-ca.crt
            path: service-ca.crt
        defaultMode: 420
  dnsPolicy: ClusterFirst
  tolerations:
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
status:
  phase: Pending
  conditions:
    - type: Initialized
      status: 'False'
      lastProbeTime: null
      lastTransitionTime: '2024-02-14T20:18:59Z'
      reason: ContainersNotInitialized
      message: 'containers with incomplete status: [place-tools place-scripts]'
    - type: Ready
      status: 'False'
      lastProbeTime: null
      lastTransitionTime: '2024-02-14T20:18:59Z'
      reason: ContainersNotReady
      message: 'containers with unready status: [step-clone]'
    - type: ContainersReady
      status: 'False'
      lastProbeTime: null
      lastTransitionTime: '2024-02-14T20:18:59Z'
      reason: ContainersNotReady
      message: 'containers with unready status: [step-clone]'
    - type: PodScheduled
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2024-02-14T20:18:59Z'
  hostIP: 10.0.243.151
  startTime: '2024-02-14T20:18:59Z'
  initContainerStatuses:
    - name: place-tools
      state:
        waiting:
          reason: PodInitializing
      lastState: {}
      ready: false
      restartCount: 0
      image: >-
        registry.redhat.io/openshift-pipelines/pipelines-entrypoint-rhel8@sha256:1f38b7296065233d17f7529f29b948183ddca4ccf640bd5d60be3aa3a6bd9366
      imageID: ''
    - name: place-scripts
      state:
        waiting:
          reason: PodInitializing
      lastState: {}
      ready: false
      restartCount: 0
      image: >-
        registry.access.redhat.com/ubi8/ubi-minimal@sha256:54ef2173bba7384dc7609e8affbae1c36f8a3ec137cacc0866116d65dd4b9afe
      imageID: ''
  containerStatuses:
    - name: step-clone
      state:
        waiting:
          reason: PodInitializing
      lastState: {}
      ready: false
      restartCount: 0
      image: >-
        registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:158b0fda662e5bc05e2ff46f6864a8620bbb45e1a2388a456de43aad6e72d8f7
      imageID: ''
      started: false
  qosClass: BestEffort
